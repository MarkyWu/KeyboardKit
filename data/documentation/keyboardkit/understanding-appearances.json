{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Keyboard-appearances","level":2,"type":"heading","text":"Keyboard appearances"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In KeyboardKit, keyboard appearances are dynamic styles that be used to define the look of an entire keyboard. They can adapt depending on context, actions etc. which means that you can configure an appearance based on any information you provide it with."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Keyboard appearances can be implemented with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardAppearance"},{"type":"text","text":", which is a protocol that describes the look, style, texts etc. of different parts of the keyboard."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit will by default create a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardAppearance"},{"type":"text","text":" and bind it to the input controller’s "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardAppearance"},{"type":"text","text":". You can replace it with a custom appearance to customize how your keyboard looks."}]},{"anchor":"Resources--Assets","level":2,"type":"heading","text":"Resources & Assets"},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit comes with colors and images that make it easy to create native-looking keyboards."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Image"},{"type":"text","text":" has a bunch of static, keyboard-specific images, e.g. "},{"type":"codeVoice","code":"Image.keyboardBackspace"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Color"},{"type":"text","text":" has a bunch of static, keyboard-specific colors, e.g. "},{"type":"codeVoice","code":"Color.standardButtonBackgroundColor(for:)"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Some types have standard images, texts and colors, e.g. "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardAction"},{"type":"text","text":"."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Have a look at the "},{"type":"codeVoice","code":"Sources\/Resources"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Sources\/Appearance"},{"type":"text","text":" folders for more information."}]},{"anchor":"Keyboard-appearances-vs-styles","level":2,"type":"heading","text":"Keyboard appearances vs styles"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Keyboard appearances are dynamic, while styles are simple structs that carry styling information for specific views. Some views, such as the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemKeyboard"},{"type":"text","text":", need the dynamic capabilities of an appearance, while other views only need a style."}]},{"anchor":"How-to-create-a-custom-keyboard-appearance","level":2,"type":"heading","text":"How to create a custom keyboard appearance"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can create a custom keyboard apperance to change the style of buttons or callouts, the texts and\/or images of various buttons etc."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can create a custom appearance by inheriting the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardAppearance"},{"type":"text","text":" base class (which gives you a lot for free) or by implementing the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardAppearance"},{"type":"text","text":" protocol from scratch."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For instance, here’s a custom apperance that inherits "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardAppearance"},{"type":"text","text":" and makes all input action buttons red:"}]},{"type":"codeListing","syntax":"swift","code":["class MyKeyboardAppearance: StandardKeyboardAppearance {","    ","    override func buttonStyle(","        for action: KeyboardAction,","        isPressed: Bool) -> KeyboardButtonStyle {","        let style = super.buttonStyle(for: action, isPressed: isPressed)","        if !action.isInputAction { return style }","        style.backgroundColor = .red","        return style","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use this appearance instead of the standard one, just set the input controller’s "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardAppearance"},{"type":"text","text":" like this:"}]},{"type":"codeListing","syntax":"swift","code":["class MyKeyboardViewController: KeyboardInputViewController {","","    override func viewDidLoad() {","        keyboardAppearance = MyKeyboardAppearance()","        super.viewDidLoad()","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will make KeyboardKit use your custom implementation instead of the standard one."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/keyboardkit\/understanding-appearances"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Appearances","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This article describes the KeyboardKit appearance engine and how to use it."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Understanding Appearances","role":"article","modules":[{"name":"KeyboardKit"}]},"hierarchy":{"paths":[["doc:\/\/KeyboardKit\/documentation\/KeyboardKit"]]},"seeAlsoSections":[{"title":"Articles","identifiers":["doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Getting-Started","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Actions","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Autocomplete","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Emojis","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Feedback","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Input-Sets","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Layout","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Localization","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Previews","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Proxy-Extensions","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Text-Routing"],"generated":true}],"references":{"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Autocomplete":{"role":"article","title":"Understanding Autocomplete","abstract":[{"type":"text","text":"This article describes the KeyboardKit autocomplete engine and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Autocomplete","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-autocomplete"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Previews":{"role":"article","title":"Understanding Previews","abstract":[{"type":"text","text":"This article describes how KeyboardKit makes it easy to preview keyboard-specific views."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Previews","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-previews"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Layout":{"role":"article","title":"Understanding Layouts","abstract":[{"type":"text","text":"This article describes the KeyboardKit keyboard layout engine and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Layout","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-layout"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Localization":{"role":"article","title":"Understanding Localization","abstract":[{"type":"text","text":"This article describes the KeyboardKit localization model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Localization","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-localization"},"doc://KeyboardKit/documentation/KeyboardKit":{"role":"collection","title":"KeyboardKit","abstract":[{"type":"text","text":"KeyboardKit helps you build custom keyboards with Swift and SwiftUI."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardAction":{"role":"symbol","title":"KeyboardAction","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardAction"}],"abstract":[{"type":"text","text":"This enum defines keyboard-specific actions that correspond"},{"type":"text","text":" "},{"type":"text","text":"to actions that can be found on various keyboards. Keyboard"},{"type":"text","text":" "},{"type":"text","text":"actions are fundamental building-blocks in the library."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardAction","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardAction"}],"url":"\/documentation\/keyboardkit\/keyboardaction"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Proxy-Extensions":{"role":"article","title":"Understanding Proxy Extensions","abstract":[{"type":"text","text":"This article describes how KeyboardKit extends "},{"type":"codeVoice","code":"UITextDocumentProxy"},{"type":"text","text":" with a lot of additional functionality."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Proxy-Extensions","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-proxy-extensions"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Actions":{"role":"article","title":"Understanding Actions","abstract":[{"type":"text","text":"This article describes the KeyboardKit action engine and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Actions","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-actions"},"doc://KeyboardKit/documentation/KeyboardKit/Getting-Started":{"role":"article","title":"Getting Started","abstract":[{"type":"text","text":"This article discusses how get started using KeyboardKit in your app."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Getting-Started","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/getting-started"},"doc://KeyboardKit/documentation/KeyboardKit/SystemKeyboard":{"role":"symbol","title":"SystemKeyboard","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SystemKeyboard"}],"abstract":[{"type":"text","text":"This view mimics native iOS system keyboards, like standard"},{"type":"text","text":" "},{"type":"text","text":"alphabetic, numeric and symbolic system keyboards."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemKeyboard","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SystemKeyboard"}],"url":"\/documentation\/keyboardkit\/systemkeyboard"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Text-Routing":{"role":"article","title":"Understanding Text Routing","abstract":[{"type":"text","text":"This article describes how KeyboardKit adds ways for you to route text to other text fields within the keyboard."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Text-Routing","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-text-routing"},"doc://KeyboardKit/documentation/KeyboardKit/StandardKeyboardAppearance":{"role":"symbol","title":"StandardKeyboardAppearance","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"StandardKeyboardAppearance"}],"abstract":[{"type":"text","text":"This standard appearance returns styles that replicates the"},{"type":"text","text":" "},{"type":"text","text":"look of a native system keyboard."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardAppearance","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StandardKeyboardAppearance"}],"url":"\/documentation\/keyboardkit\/standardkeyboardappearance"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController/keyboardAppearance":{"role":"symbol","title":"keyboardAppearance","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyboardAppearance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyboardAppearance","preciseIdentifier":"s:11KeyboardKit0A10AppearanceP"}],"abstract":[{"type":"text","text":"This appearance can be used to customize the keyboard’s"},{"type":"text","text":" "},{"type":"text","text":"design, such as its colors, fonts etc."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardAppearance","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller\/keyboardappearance"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Emojis":{"role":"article","title":"Understanding Emojis","abstract":[{"type":"text","text":"This article describes the KeyboardKit emoji model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Emojis","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-emojis"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Input-Sets":{"role":"article","title":"Understanding Input Sets","abstract":[{"type":"text","text":"This article describes the KeyboardKit input set model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Input-Sets","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-input-sets"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardAppearance":{"role":"symbol","title":"KeyboardAppearance","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardAppearance"}],"abstract":[{"type":"text","text":"This protocol can be implemented by classes that can define"},{"type":"text","text":" "},{"type":"text","text":"styles and appearances for different parts of a keyboard."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardAppearance","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardAppearance"}],"url":"\/documentation\/keyboardkit\/keyboardappearance"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Feedback":{"role":"article","title":"Understanding Feedback","abstract":[{"type":"text","text":"This article describes the KeyboardKit feedback engine and how to use it to get audio and haptic feedback."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Feedback","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-feedback"}}}