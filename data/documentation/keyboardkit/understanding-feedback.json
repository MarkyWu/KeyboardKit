{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Keyboard-feedback","level":2,"type":"heading","text":"Keyboard feedback"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In KeyboardKit, keyboard feedback is a way to trigger audio and haptic feedback as the user types."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Keyboard feedback can be handled with a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardFeedbackHandler"},{"type":"text","text":", which is a protocol that can be implemented by any class that can be used to handle keyboard feedback."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit will by default create a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardFeedbackHandler"},{"type":"text","text":" and bind it to the input controller’s "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardFeedbackHandler"},{"type":"text","text":". You can replace it with a custom handler to customize how audio and haptic feedback is handled."}]},{"anchor":"Keyboard-feedback-settings","level":2,"type":"heading","text":"Keyboard feedback settings"},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit also has an observable "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardFeedbackSettings"},{"type":"text","text":" class that can be used to configure the the audio and haptic feedback to use for various actions."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit will by default create a settings instance and apply it to the input controller’s "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardFeedbackSettings"},{"type":"text","text":". You can then configure this instance to change the audio and haptic feedback behavior without having to create a custom feedback handler."}]},{"anchor":"How-to-create-a-custom-keyboard-feedback-handler","level":2,"type":"heading","text":"How to create a custom keyboard feedback handler"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can create a custom keyboard feedback handler if you want to customize how feedback is handled, or to handle various feedback types that have no default behavior."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can create a custom feedback handler by inheriting the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardFeedbackHandler"},{"type":"text","text":" base class (which gives you a lot of functionality for free) or by implementing the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardFeedbackHandler"},{"type":"text","text":" protocol from scratch."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For instance, here is a custom handler that inherits the base class and triggers haptic feedback when the return button is long pressed:"}]},{"type":"codeListing","syntax":"swift","code":["class MyKeyboardFeedbackHandler: StandardKeyboardFeedbackHandler {","    ","    override func triggerFeedback(for gesture: KeyboardGesture, on action: KeyboardAction) {","        if gesture == .longPress && action == .return {","            return HapticFeedback.heavyImpact.trigger()","        }","        super.triggerFeedback(for: gesture, on: action)","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use this feedback handler instead of the standard one, just set the input controller’s "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardFeedbackHandler"},{"type":"text","text":" like this:"}]},{"type":"codeListing","syntax":"swift","code":["class MyKeyboardViewController: KeyboardInputViewController {","","    override func viewDidLoad() {","        keyboardFeedbackHandler = MyKeyboardFeedbackHandler()","        super.viewDidLoad()","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will make KeyboardKit use your custom implementation instead of the standard one."}]},{"anchor":"How-to-trigger-feedback-without-a-handler","level":2,"type":"heading","text":"How to trigger feedback without a handler"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You don’t need to use a feedback handler to trigger audio and haptic feedback, although that is the most flexible approach for doing so."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To just trigger audio or haptic feedback, the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/AudioFeedback"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/HapticFeedback"},{"type":"text","text":" enums have a "},{"type":"codeVoice","code":"trigger"},{"type":"text","text":" function that will trigger the feedback using a static "},{"type":"codeVoice","code":"engine"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can replace "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/AudioFeedback\/engine"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/HapticFeedback\/engine"},{"type":"text","text":" with custom engines to change the global behavior of how audio and haptic feedback is handled."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that your keyboard extension needs full access to be able to trigger haptic feedback. Full access must be enabled by the user, under "},{"type":"codeVoice","code":"System Settings > General > Keyboards > Your Keyboard"},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/keyboardkit\/understanding-feedback"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Feedback","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This article describes the KeyboardKit feedback engine and how to use it to get audio and haptic feedback."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Understanding Feedback","role":"article","modules":[{"name":"KeyboardKit"}]},"hierarchy":{"paths":[["doc:\/\/KeyboardKit\/documentation\/KeyboardKit"]]},"seeAlsoSections":[{"title":"Articles","identifiers":["doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Getting-Started","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Actions","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Appearances","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Autocomplete","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Emojis","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Input-Sets","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Layout","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Localization","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Previews","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Proxy-Extensions","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Text-Routing"],"generated":true}],"references":{"doc://KeyboardKit/documentation/KeyboardKit":{"role":"collection","title":"KeyboardKit","abstract":[{"type":"text","text":"KeyboardKit helps you build custom keyboards with Swift and SwiftUI."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit"},"doc://KeyboardKit/documentation/KeyboardKit/Getting-Started":{"role":"article","title":"Getting Started","abstract":[{"type":"text","text":"This article discusses how get started using KeyboardKit in your app."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Getting-Started","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/getting-started"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Autocomplete":{"role":"article","title":"Understanding Autocomplete","abstract":[{"type":"text","text":"This article describes the KeyboardKit autocomplete engine and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Autocomplete","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-autocomplete"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardFeedbackSettings":{"role":"symbol","title":"KeyboardFeedbackSettings","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardFeedbackSettings"}],"abstract":[{"type":"text","text":"This class can be used to specify what kind of feedback the"},{"type":"text","text":" "},{"type":"text","text":"current keyboard should give to the user."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardFeedbackSettings","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardFeedbackSettings"}],"url":"\/documentation\/keyboardkit\/keyboardfeedbacksettings"},"doc://KeyboardKit/documentation/KeyboardKit/HapticFeedback":{"role":"symbol","title":"HapticFeedback","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HapticFeedback"}],"abstract":[{"type":"text","text":"This enum contains various haptic feedback types."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/HapticFeedback","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HapticFeedback"}],"url":"\/documentation\/keyboardkit\/hapticfeedback"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController/keyboardFeedbackSettings":{"role":"symbol","title":"keyboardFeedbackSettings","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyboardFeedbackSettings"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyboardFeedbackSettings","preciseIdentifier":"s:11KeyboardKit0A16FeedbackSettingsC"}],"abstract":[{"type":"text","text":"The default, observable feedback settings."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardFeedbackSettings","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller\/keyboardfeedbacksettings"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController/keyboardFeedbackHandler":{"role":"symbol","title":"keyboardFeedbackHandler","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyboardFeedbackHandler"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyboardFeedbackHandler","preciseIdentifier":"s:11KeyboardKit0A15FeedbackHandlerP"}],"abstract":[{"type":"text","text":"This feedback handler is used to setup audio and haptic"},{"type":"text","text":" "},{"type":"text","text":"feedback when the keyboard is being used."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardFeedbackHandler","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller\/keyboardfeedbackhandler"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Input-Sets":{"role":"article","title":"Understanding Input Sets","abstract":[{"type":"text","text":"This article describes the KeyboardKit input set model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Input-Sets","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-input-sets"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Localization":{"role":"article","title":"Understanding Localization","abstract":[{"type":"text","text":"This article describes the KeyboardKit localization model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Localization","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-localization"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardFeedbackHandler":{"role":"symbol","title":"KeyboardFeedbackHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardFeedbackHandler"}],"abstract":[{"type":"text","text":"This protocol can be implemented by any classes that can be"},{"type":"text","text":" "},{"type":"text","text":"used to trigger audio and haptic feedback to the user."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardFeedbackHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardFeedbackHandler"}],"url":"\/documentation\/keyboardkit\/keyboardfeedbackhandler"},"doc://KeyboardKit/documentation/KeyboardKit/StandardKeyboardFeedbackHandler":{"role":"symbol","title":"StandardKeyboardFeedbackHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"StandardKeyboardFeedbackHandler"}],"abstract":[{"type":"text","text":"This feedback handler is used by default by KeyboardKit and"},{"type":"text","text":" "},{"type":"text","text":"can trigger audio and haptic feeeback."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardFeedbackHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StandardKeyboardFeedbackHandler"}],"url":"\/documentation\/keyboardkit\/standardkeyboardfeedbackhandler"},"doc://KeyboardKit/documentation/KeyboardKit/AudioFeedback/engine":{"role":"symbol","title":"engine","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"engine"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AudioFeedbackEngine","preciseIdentifier":"s:11KeyboardKit19AudioFeedbackEngineP"}],"abstract":[{"type":"text","text":"The engine that will be used to trigger audio feedback."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/AudioFeedback\/engine","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/audiofeedback\/engine"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Proxy-Extensions":{"role":"article","title":"Understanding Proxy Extensions","abstract":[{"type":"text","text":"This article describes how KeyboardKit extends "},{"type":"codeVoice","code":"UITextDocumentProxy"},{"type":"text","text":" with a lot of additional functionality."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Proxy-Extensions","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-proxy-extensions"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Appearances":{"role":"article","title":"Understanding Appearances","abstract":[{"type":"text","text":"This article describes the KeyboardKit appearance engine and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Appearances","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-appearances"},"doc://KeyboardKit/documentation/KeyboardKit/HapticFeedback/engine":{"role":"symbol","title":"engine","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"engine"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HapticFeedbackEngine","preciseIdentifier":"s:11KeyboardKit20HapticFeedbackEngineP"}],"abstract":[{"type":"text","text":"The engine that will be used to trigger haptic feedback."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/HapticFeedback\/engine","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/hapticfeedback\/engine"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Layout":{"role":"article","title":"Understanding Layouts","abstract":[{"type":"text","text":"This article describes the KeyboardKit keyboard layout engine and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Layout","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-layout"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Previews":{"role":"article","title":"Understanding Previews","abstract":[{"type":"text","text":"This article describes how KeyboardKit makes it easy to preview keyboard-specific views."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Previews","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-previews"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Actions":{"role":"article","title":"Understanding Actions","abstract":[{"type":"text","text":"This article describes the KeyboardKit action engine and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Actions","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-actions"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Emojis":{"role":"article","title":"Understanding Emojis","abstract":[{"type":"text","text":"This article describes the KeyboardKit emoji model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Emojis","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-emojis"},"doc://KeyboardKit/documentation/KeyboardKit/AudioFeedback":{"role":"symbol","title":"AudioFeedback","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AudioFeedback"}],"abstract":[{"type":"text","text":"This enum contains various audio feedback types."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/AudioFeedback","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AudioFeedback"}],"url":"\/documentation\/keyboardkit\/audiofeedback"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Text-Routing":{"role":"article","title":"Understanding Text Routing","abstract":[{"type":"text","text":"This article describes how KeyboardKit adds ways for you to route text to other text fields within the keyboard."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Text-Routing","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-text-routing"}}}