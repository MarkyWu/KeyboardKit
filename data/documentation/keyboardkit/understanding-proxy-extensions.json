{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Keyboard input view controllers have a "},{"type":"codeVoice","code":"textDocumentProxy"},{"type":"text","text":", which is the way the keyboard is intended to work with the currently active app."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The text document proxy letâ€™s you insert and remove text, move the cursor forward and backward etc. However, its capabilities are very basic, and requires you to implement a bunch of functionality if you want your keyboard to do more things."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit therefore provides you with a lot of proxy extensions that make the proxy more capable. Some extensions have to work around the limitiations of what an iOS keyboard extension can do, but overall these extensions will make a lot of operations easier to implement."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Since extensions are not included in the generated documentation, this article describes the extensions you get to by simply importing KeyboardKit. In fact, you could import KeyboardKit just to get access to these extensions and ignore all other parts of the library, and it would still bring a lot of value."}]},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/KeyboardKit\/KeyboardKitPro"},{"type":"text","text":" specific extensions are described at the end of this document."}]},{"anchor":"Autocomplete","level":2,"type":"heading","text":"Autocomplete"},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKey defines a couple of autocomplete-specific extensions that are used by the library."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"hasAutocompleteInsertedSpace"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"hasAutocompleteRemovedSpace"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"insertAutocompleteSuggestion(:tryInsertSpace)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"tryInsertSpaceAfterAutocomplete()"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"tryReinsertAutocompleteRemovedSpace()"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"tryRemoveAutocompleteInsertedSpace"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You will probably not have to use these extensions, but they are there for you if you ever need them."}]},{"anchor":"Content","level":2,"type":"heading","text":"Content"},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit defines two content-specific extensions:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"trimmedDocumentContextAfterInput"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"trimmedDocumentContextBeforeInput"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"These properties return the trimmed text before and after the input cursor."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that keyboard extensions donâ€™t have access to all text in the text document, which means that these properties will just give you the text closest to the input cursor. "},{"overridingTitleInlineContent":[{"type":"text","text":"KeyboardKit Pro"}],"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/KeyboardKit\/KeyboardKitPro","overridingTitle":"KeyboardKit Pro"},{"type":"text","text":" however adds ways to get all the text."}]},{"anchor":"Delete","level":2,"type":"heading","text":"Delete"},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit extends the text document proxyâ€™s by default limited functionality of only being able to delete backwards a single time:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"deleteBackward(times:)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"deleteBackward(range:)"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This makes it easier to e.g. delete an entire word or sentence."}]},{"anchor":"Quotation","level":2,"type":"heading","text":"Quotation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit defines two functions for analyzing the current quotation state:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"isOpenAlternateQuotationBeforeInput(for:)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"isOpenQuotationBeforeInput(for:)"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"These properties let you check if there are an unclosed quotation before the text input cursor."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The quotation and alternate quotation characters differ between locales, which is why you need to provide a "},{"type":"codeVoice","code":"Locale"},{"type":"text","text":"."}]},{"anchor":"Replacements","level":2,"type":"heading","text":"Replacements"},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit defines a function for getting preferred text replacements:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"preferredReplacement(for:locale:)"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function is for instance used to replace an opening quotation if the text actually needs a closing quotation."}]},{"anchor":"Sentences","level":2,"type":"heading","text":"Sentences"},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit defines a bunch of sentence-specific extensions:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"isCursorAtNewSentence"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"isCursorAtNewSentenceWithSpace"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"sentenceBeforeInput"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"sentenceDelimiters"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"endSentence()"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"These properties and functions make it easier to work with sentences."}]},{"anchor":"Words","level":2,"type":"heading","text":"Words"},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit defines a bunch of word-specific extensions:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"currentWord"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"currentWordPreCursorPart"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"currentWordPostCursorPart"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"hasCurrentWord"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"isCursorAtNewWord"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"isCursorAtTheEndOfTheCurrentWord"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"wordBeforeInput"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"wordDelimiters"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"replaceCurrentWord(with replacement: String)"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"These properties and functions make it easier to work with words."}]},{"anchor":"ðŸ‘‘-Pro-features","level":2,"type":"heading","text":"ðŸ‘‘ Pro features"},{"type":"paragraph","inlineContent":[{"overridingTitleInlineContent":[{"type":"text","text":"KeyboardKit Pro"}],"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/KeyboardKit\/KeyboardKitPro","overridingTitle":"KeyboardKit Pro"},{"type":"text","text":" unlocks additional text document proxy capabilities."}]},{"anchor":"Getting-the-full-document-context","level":3,"type":"heading","text":"Getting the full document context"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As you may have noticed, The "},{"type":"codeVoice","code":"UITextDocumentProxy"},{"type":"text","text":" "},{"type":"codeVoice","code":"documentContextBeforeInput"},{"type":"text","text":" and "},{"type":"codeVoice","code":"documentContextAfterInput"},{"type":"text","text":" properties donâ€™t return "},{"type":"emphasis","inlineContent":[{"type":"text","text":"all"}]},{"type":"text","text":" content before and after the text input cursor,. Any line break may at any time stop the proxy from reading more content, which makes it hard to do more complex operations from a keyboard extension, such as proof-reading a document."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit Pro therefore unlocks some "},{"type":"codeVoice","code":"UITextDocumentProxy"},{"type":"text","text":" extensions that let you access all text from the proxy:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"func fullDocumentContext() async throws -> FullDocumentContextResult"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"func fullDocumentContextBeforeInput() async throws -> String"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"func fullDocumentContextAfterInput() async throws -> String"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"fullDocumentContext()"},{"type":"text","text":" resolves all text before and after the input, while the others can be used if you just need the text before or after the input."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Since these functions are "},{"type":"codeVoice","code":"async"},{"type":"text","text":", you need to wrap them in a task when calling them from SwiftUI, for instance:"}]},{"type":"codeListing","syntax":"swift","code":["struct KeyboardView: View {","","    @EnvironmentObject","    private var context: KeyboardContext","","    var body: some View {","        VStack {","            Button(\"Get the full document context\") {","                Task {","                    let proxy = context.textDocumentProxy","                    let result = try? await proxy.fullDocumentContext()","                    await MainActor.run {","                        print(result?.fullDocumentContext)","                        print(result?.fullDocumentContextBeforeInput)","                        print(result?.fullDocumentContextAfterInput)","                    }","                }","            }","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that calling these functions will cause the keyboard extension to navigate through the entire text mass by moving the input cursor around in the text document, after which it will try to return the cursor to its original position."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Since this feature is new and the way it works uses unreliable operations, please report any incorrect behavior so that it can be improved if needed."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/keyboardkit\/understanding-proxy-extensions"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Proxy-Extensions","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This article describes how KeyboardKit extends "},{"type":"codeVoice","code":"UITextDocumentProxy"},{"type":"text","text":" with a lot of additional functionality."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Understanding Proxy Extensions","role":"article","modules":[{"name":"KeyboardKit"}]},"hierarchy":{"paths":[["doc:\/\/KeyboardKit\/documentation\/KeyboardKit"]]},"seeAlsoSections":[{"title":"Articles","identifiers":["doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Getting-Started","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Actions","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Appearances","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Autocomplete","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Emojis","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Feedback","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Input-Sets","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Layout","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Localization","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Previews","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Text-Routing"],"generated":true}],"references":{"doc://KeyboardKit/documentation/KeyboardKit/Getting-Started":{"role":"article","title":"Getting Started","abstract":[{"type":"text","text":"This article discusses how get started using KeyboardKit in your app."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Getting-Started","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/getting-started"},"https://github.com/KeyboardKit/KeyboardKitPro":{"title":"KeyboardKit Pro","titleInlineContent":[{"type":"text","text":"KeyboardKit Pro"}],"type":"link","identifier":"https:\/\/github.com\/KeyboardKit\/KeyboardKitPro","url":"https:\/\/github.com\/KeyboardKit\/KeyboardKitPro"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Localization":{"role":"article","title":"Understanding Localization","abstract":[{"type":"text","text":"This article describes the KeyboardKit localization model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Localization","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-localization"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Input-Sets":{"role":"article","title":"Understanding Input Sets","abstract":[{"type":"text","text":"This article describes the KeyboardKit input set model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Input-Sets","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-input-sets"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Actions":{"role":"article","title":"Understanding Actions","abstract":[{"type":"text","text":"This article describes the KeyboardKit action engine and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Actions","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-actions"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Layout":{"role":"article","title":"Understanding Layouts","abstract":[{"type":"text","text":"This article describes the KeyboardKit keyboard layout engine and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Layout","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-layout"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Appearances":{"role":"article","title":"Understanding Appearances","abstract":[{"type":"text","text":"This article describes the KeyboardKit appearance engine and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Appearances","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-appearances"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Autocomplete":{"role":"article","title":"Understanding Autocomplete","abstract":[{"type":"text","text":"This article describes the KeyboardKit autocomplete engine and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Autocomplete","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-autocomplete"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Emojis":{"role":"article","title":"Understanding Emojis","abstract":[{"type":"text","text":"This article describes the KeyboardKit emoji model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Emojis","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-emojis"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Previews":{"role":"article","title":"Understanding Previews","abstract":[{"type":"text","text":"This article describes how KeyboardKit makes it easy to preview keyboard-specific views."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Previews","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-previews"},"doc://KeyboardKit/documentation/KeyboardKit":{"role":"collection","title":"KeyboardKit","abstract":[{"type":"text","text":"KeyboardKit helps you build custom keyboards with Swift and SwiftUI."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Text-Routing":{"role":"article","title":"Understanding Text Routing","abstract":[{"type":"text","text":"This article describes how KeyboardKit adds ways for you to route text to other text fields within the keyboard."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Text-Routing","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-text-routing"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Feedback":{"role":"article","title":"Understanding Feedback","abstract":[{"type":"text","text":"This article describes the KeyboardKit feedback engine and how to use it to get audio and haptic feedback."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Feedback","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-feedback"}}}