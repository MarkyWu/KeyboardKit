{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Autocomplete is when the keyboard presents completions and corrections for the word that you are currently typing. Native keyboards also have something called Predictive Text, which is when the keyboard presents predictive suggestions based on the text that you have just typed."}]},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/KeyboardKit\/KeyboardKitPro"},{"type":"text","text":" specific features are described at the end of this document."}]},{"anchor":"Autocomplete-provider","level":2,"type":"heading","text":"Autocomplete provider"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In KeyboardKit, an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/AutocompleteProvider"},{"type":"text","text":" can be used to provide the keyboard with autocomplete suggestions as the user types."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The protocol describes how to provide autocomplete suggestions to a keyboard extension, as well as the types that should be returned."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit doesnâ€™t have a standard autocomplete provider implementation, as it has for most other services, since this is a "},{"overridingTitleInlineContent":[{"type":"text","text":"KeyboardKit Pro"}],"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/KeyboardKit\/KeyboardKitPro","overridingTitle":"KeyboardKit Pro"},{"type":"text","text":" feature. You can however create your own implementation and integrate with any service you want."}]},{"anchor":"How-to-create-a-custom-provider","level":2,"type":"heading","text":"How to create a custom provider"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can implement a custom "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/AutocompleteProvider"},{"type":"text","text":" implementation if you want to integrate with an embedded framework, an external api etc."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For instance, hereâ€™s a provider that just adds a suffix to the provided textâ€™s current word:"}]},{"type":"codeListing","syntax":"swift","code":["class MyAutocompleteProvider: AutocompleteProvider {","    ","    var locale: Locale = .current","","    func autocompleteSuggestions(for text: String, completion: AutocompleteCompletion) {","        let word = text.split(by: String.wordDelimiters).last ?? \"\"","        if text.isEmpty { return completion(.success([])) }","        completion(.success(suggestions(for: text)))","    }","    ","    var canIgnoreWords: Bool { false }","    var canLearnWords: Bool { false }","    var ignoredWords: [String] = []","    var learnedWords: [String] = []","    ","    func hasIgnoredWord(_ word: String) -> Bool { false }","    func hasLearnedWord(_ word: String) -> Bool { false }","    func ignoreWord(_ word: String) {}","    func learnWord(_ word: String) {}","    func removeIgnoredWord(_ word: String) {}","    func unlearnWord(_ word: String) {}","}","","private extension MyAutocompleteProvider {","    ","    func suggestions(for text: String) -> [AutocompleteSuggestion] {","        [","            suggestion(text + \"ly\"),","            suggestion(text + \"er\", \"Subtitle\"),","            suggestion(text + \"ter\")","        ]","    }","    ","    func suggestion(_ word: String, _ subtitle: String? = nil) -> AutocompleteSuggestion {","        StandardAutocompleteSuggestion(","            text: word, ","            title: word, ","            subtitle: subtitle)","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use this provider instead of the standard one, just bind it to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/autocompleteProvider"},{"type":"text","text":", like this:"}]},{"type":"codeListing","syntax":"swift","code":["class MyKeyboardViewController: KeyboardInputViewController {","","    override func viewDidLoad() {","        autocompleteProvider = MyAutocompleteProvider()","        super.viewDidLoad()","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will make KeyboardKit use your custom implementation instead of the standard one."}]},{"anchor":"How-to-perform-autocomplete","level":2,"type":"heading","text":"How to perform autocomplete"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Autocomplete is performed automatically, since "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController"},{"type":"text","text":" calls "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/performAutocomplete()"},{"type":"text","text":" when its text changes. You can also call this function at any time to perform an autocomplete operation whenever you want."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A successful autocomplete operation will update the controllerâ€™s "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/autocompleteContext"},{"type":"text","text":", after which its "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/AutocompleteContext\/suggestions"},{"type":"text","text":" can be used in any way you like, for instance by passing them into an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/AutocompleteToolbar"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The controller has a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/autocompleteText"},{"type":"text","text":" property that it uses when performing autocomplete. It uses the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/textDocumentProxy"},{"type":"text","text":"â€™s text before the input cursor by default, but you can override the function to customize this behavior."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also override "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/performAutocomplete()"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/resetAutocomplete()"},{"type":"text","text":" to customize the default autocomplete behavior of the controller."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you ever need to reset the current autocomplete state, you can call "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/resetAutocomplete()"},{"type":"text","text":" to reset any existing suggestions."}]},{"anchor":"ðŸ‘‘-Pro-features","level":2,"type":"heading","text":"ðŸ‘‘ Pro features"},{"type":"paragraph","inlineContent":[{"overridingTitleInlineContent":[{"type":"text","text":"KeyboardKit Pro"}],"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/KeyboardKit\/KeyboardKitPro","overridingTitle":"KeyboardKit Pro"},{"type":"text","text":" unlocks additional autocomplete capabilities."}]},{"anchor":"Standard-autocomplete-provider","level":3,"type":"heading","text":"Standard autocomplete provider"},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit Pro unlocks a "},{"type":"codeVoice","code":"StandardAutocompleteProvider"},{"type":"text","text":", which performs autocomplete locally on device, and register it as the current "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/autocompleteProvider"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The standard autocomplete provider uses on-devices autocomple capabilities, which will generate basic suggestions that are not comparable in quality with the ones that native iOS keyboards present. It will however make your keyboard look and behave more like a native keyboard than if you donâ€™t have any autocomplete in place."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can inherit this class and customize it if you find that some of its predictions are not what you want."}]},{"anchor":"Remote-autocomplete-provider","level":3,"type":"heading","text":"Remote autocomplete provider"},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit Pro also unlocks an "},{"type":"codeVoice","code":"ExternalAutocompleteProvider"},{"type":"text","text":", which can fetch autocomplete suggestions from any external api."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This provider can be customized to great extent, to modify the request url path and parameters if needed. You can try it out in the Pro demo app, by creating an instance that goes to an api that you have access to."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Since most autocomplete api:s require a secret api token or some form of authentication, the demo app doesnâ€™t include a provider from start. You must create and configure it yourself."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need autocomplete capabilities that "},{"type":"codeVoice","code":"ExternalAutocompleteProvider"},{"type":"text","text":" currently lacks, donâ€™t hesistate to reach out and explain how it can be extended to cover your needs."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/keyboardkit\/understanding-autocomplete"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Autocomplete","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This article describes the KeyboardKit autocomplete engine and how to use it."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Understanding Autocomplete","role":"article","modules":[{"name":"KeyboardKit"}]},"hierarchy":{"paths":[["doc:\/\/KeyboardKit\/documentation\/KeyboardKit"]]},"seeAlsoSections":[{"title":"Articles","identifiers":["doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Getting-Started","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Actions","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Appearances","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Emojis","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Feedback","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Input-Sets","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Layout","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Localization","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Previews","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Proxy-Extensions","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Text-Routing"],"generated":true}],"references":{"https://github.com/KeyboardKit/KeyboardKitPro":{"title":"KeyboardKit Pro","titleInlineContent":[{"type":"text","text":"KeyboardKit Pro"}],"type":"link","identifier":"https:\/\/github.com\/KeyboardKit\/KeyboardKitPro","url":"https:\/\/github.com\/KeyboardKit\/KeyboardKitPro"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController/autocompleteContext":{"role":"symbol","title":"autocompleteContext","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"autocompleteContext"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AutocompleteContext","preciseIdentifier":"s:11KeyboardKit19AutocompleteContextC"}],"abstract":[{"type":"text","text":"The default, observable autocomplete context."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/autocompleteContext","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller\/autocompletecontext"},"doc://KeyboardKit/documentation/KeyboardKit/AutocompleteContext/suggestions":{"role":"symbol","title":"suggestions","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"suggestions"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"AutocompleteSuggestion","preciseIdentifier":"s:11KeyboardKit22AutocompleteSuggestionP"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"The last received autocomplete suggestions."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/AutocompleteContext\/suggestions","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/autocompletecontext\/suggestions"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController":{"role":"symbol","title":"KeyboardInputViewController","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardInputViewController"}],"abstract":[{"type":"text","text":"This class extends "},{"type":"codeVoice","code":"UIInputViewController"},{"type":"text","text":" with KeyboardKit"},{"type":"text","text":" "},{"type":"text","text":"specific functionality."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardInputViewController"}],"url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Layout":{"role":"article","title":"Understanding Layouts","abstract":[{"type":"text","text":"This article describes the KeyboardKit keyboard layout engine and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Layout","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-layout"},"doc://KeyboardKit/documentation/KeyboardKit/AutocompleteProvider":{"role":"symbol","title":"AutocompleteProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AutocompleteProvider"}],"abstract":[{"type":"text","text":"This protocol can be implemented by any classes that can be"},{"type":"text","text":" "},{"type":"text","text":"used to give autocomplete suggestions as the user types."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/AutocompleteProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AutocompleteProvider"}],"url":"\/documentation\/keyboardkit\/autocompleteprovider"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Actions":{"role":"article","title":"Understanding Actions","abstract":[{"type":"text","text":"This article describes the KeyboardKit action engine and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Actions","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-actions"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController/resetAutocomplete()":{"role":"symbol","title":"resetAutocomplete()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resetAutocomplete"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Reset the current autocomplete state."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/resetAutocomplete()","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller\/resetautocomplete()"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController/autocompleteText":{"role":"symbol","title":"autocompleteText","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"autocompleteText"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"The text that is provided to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/autocompleteProvider"},{"type":"text","text":" "},{"type":"text","text":"when "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/performAutocomplete()"},{"type":"text","text":" is called."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/autocompleteText","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller\/autocompletetext"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Emojis":{"role":"article","title":"Understanding Emojis","abstract":[{"type":"text","text":"This article describes the KeyboardKit emoji model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Emojis","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-emojis"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController/autocompleteProvider":{"role":"symbol","title":"autocompleteProvider","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"autocompleteProvider"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AutocompleteProvider","preciseIdentifier":"s:11KeyboardKit20AutocompleteProviderP"}],"abstract":[{"type":"text","text":"This provider is used to provide the keyboard extension"},{"type":"text","text":" "},{"type":"text","text":"with autocomplete suggestions."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/autocompleteProvider","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller\/autocompleteprovider"},"doc://KeyboardKit/documentation/KeyboardKit/AutocompleteToolbar":{"role":"symbol","title":"AutocompleteToolbar","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AutocompleteToolbar"}],"abstract":[{"type":"text","text":"This view is a horizontal row with autocomplete buttons and"},{"type":"text","text":" "},{"type":"text","text":"separator lines between the buttons."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/AutocompleteToolbar","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AutocompleteToolbar"}],"url":"\/documentation\/keyboardkit\/autocompletetoolbar"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController/textDocumentProxy":{"role":"symbol","title":"textDocumentProxy","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"textDocumentProxy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UITextDocumentProxy","preciseIdentifier":"c:objc(pl)UITextDocumentProxy"}],"abstract":[{"type":"text","text":"The text document proxy to use, which can either be the"},{"type":"text","text":" "},{"type":"text","text":"original text input proxy or the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/textInputProxy"},{"type":"text","text":", if"},{"type":"text","text":" "},{"type":"text","text":"it is set to a custom value."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/textDocumentProxy","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller\/textdocumentproxy"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController/textInputProxy":{"role":"symbol","title":"textInputProxy","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"textInputProxy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TextInputProxy","preciseIdentifier":"c:@M@KeyboardKit@objc(cs)TextInputProxy"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"A custom text input proxy to which text input should be"},{"type":"text","text":" "},{"type":"text","text":"redirected instead of the "},{"type":"codeVoice","code":"textDocumentProxy"},{"type":"text","text":"."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/textInputProxy","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller\/textinputproxy"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Text-Routing":{"role":"article","title":"Understanding Text Routing","abstract":[{"type":"text","text":"This article describes how KeyboardKit adds ways for you to route text to other text fields within the keyboard."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Text-Routing","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-text-routing"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Proxy-Extensions":{"role":"article","title":"Understanding Proxy Extensions","abstract":[{"type":"text","text":"This article describes how KeyboardKit extends "},{"type":"codeVoice","code":"UITextDocumentProxy"},{"type":"text","text":" with a lot of additional functionality."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Proxy-Extensions","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-proxy-extensions"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Feedback":{"role":"article","title":"Understanding Feedback","abstract":[{"type":"text","text":"This article describes the KeyboardKit feedback engine and how to use it to get audio and haptic feedback."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Feedback","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-feedback"},"doc://KeyboardKit/documentation/KeyboardKit/Getting-Started":{"role":"article","title":"Getting Started","abstract":[{"type":"text","text":"This article discusses how get started using KeyboardKit in your app."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Getting-Started","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/getting-started"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Localization":{"role":"article","title":"Understanding Localization","abstract":[{"type":"text","text":"This article describes the KeyboardKit localization model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Localization","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-localization"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Previews":{"role":"article","title":"Understanding Previews","abstract":[{"type":"text","text":"This article describes how KeyboardKit makes it easy to preview keyboard-specific views."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Previews","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-previews"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Input-Sets":{"role":"article","title":"Understanding Input Sets","abstract":[{"type":"text","text":"This article describes the KeyboardKit input set model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Input-Sets","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-input-sets"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController/performAutocomplete()":{"role":"symbol","title":"performAutocomplete()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"performAutocomplete"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Perform an autocomplete operation."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/performAutocomplete()","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller\/performautocomplete()"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Appearances":{"role":"article","title":"Understanding Appearances","abstract":[{"type":"text","text":"This article describes the KeyboardKit appearance engine and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Appearances","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-appearances"},"doc://KeyboardKit/documentation/KeyboardKit":{"role":"collection","title":"KeyboardKit","abstract":[{"type":"text","text":"KeyboardKit helps you build custom keyboards with Swift and SwiftUI."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit"}}}