{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Input-sets-vs-keyboard-layouts","level":2,"type":"heading","text":"Input sets vs keyboard layouts"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In KeyboardKit, "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/InputSet"},{"type":"text","text":"s and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardLayout"},{"type":"text","text":"s are central concepts when creating "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemKeyboard"},{"type":"text","text":"s. You can also use them when you create custom keyboards, but you don’t have to."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/InputSet"},{"type":"text","text":" defines the input keys on a keyboard, which can be combined with other actions to create a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardLayout"},{"type":"text","text":", which defines the full set of actions on a keyboard as well as insets, sizes etc. This means that you can use many different input sets with a single keyboard layout."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A typical system keyboard layout has several rows, where center input buttons are surrounded by action buttons on one or both sides."}]},{"anchor":"Keyboard-layout-providers","level":2,"type":"heading","text":"Keyboard layout providers"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The most flexible way to generate a keyboard layout is with a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardLayoutProvider"},{"type":"text","text":". KeyboardKit will by default create a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardLayoutProvider"},{"type":"text","text":" and apply it to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardLayoutProvider"},{"type":"text","text":" when it’s initialized. You can replace this provider with a custom one if you want to."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardLayoutProvider"},{"type":"text","text":" is initialized with an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/InputSetProvider"},{"type":"text","text":", which makes it possible to vary the input set while keeping the surrounding keys intact. It uses an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/iPhoneKeyboardLayoutProvider"},{"type":"text","text":" and an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/iPadKeyboardLayoutProvider"},{"type":"text","text":" to generate device-specific layouts."}]},{"anchor":"KeyboardKit-Pro","level":2,"type":"heading","text":"KeyboardKit Pro"},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/KeyboardKit\/KeyboardKitPro"},{"type":"text","text":" unlocks additional input set providers for the 50+ locales it supports, e.g. "},{"type":"codeVoice","code":"PolishInputSetProvider"},{"type":"text","text":", localized input sets like "},{"type":"codeVoice","code":"AlphabeticInputSet.filipino"},{"type":"text","text":" and input set variations like "},{"type":"codeVoice","code":"AlphabeticInputSet.azerty"},{"type":"text","text":", "},{"type":"codeVoice","code":"AlphabeticInputSet.qwertz"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This means that "},{"overridingTitleInlineContent":[{"type":"text","text":"KeyboardKit Pro"}],"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/KeyboardKit\/KeyboardKitPro","overridingTitle":"KeyboardKit Pro"},{"type":"text","text":" lets you create fully localized "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemKeyboard"},{"type":"text","text":"s for all available locales with a single line of code."}]},{"anchor":"How-to-customize-the-standard-layout-provider","level":2,"type":"heading","text":"How to customize the standard layout provider"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to make minor customizations to the standard layout provider, there are a couple of options:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Subclass "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardLayoutProvider"},{"type":"text","text":" and override "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardLayoutProvider\/keyboardLayout(for:)"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardLayoutProvider"},{"type":"text","text":" instance and inject a custom "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardLayoutProvider\/iPadProvider"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardLayoutProvider"},{"type":"text","text":" instance and inject a custom "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardLayoutProvider\/iPhoneProvider"},{"type":"text","text":"."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also create a completely custom keyboard layout provider, see below."}]},{"anchor":"How-to-create-a-custom-keyboard-layout-provider","level":2,"type":"heading","text":"How to create a custom keyboard layout provider"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can create a custom keyboard layout provider by either inheriting and customizing the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardLayoutProvider"},{"type":"text","text":" base class (which gives you a lot of functionality for free) or by implementing the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardLayoutProvider"},{"type":"text","text":" protocol from scratch."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For instance, here’s a custom provider that extends "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardLayoutProvider"},{"type":"text","text":" and injects a tab key to the top-leading part of the keyboard:"}]},{"type":"codeListing","syntax":"swift","code":["class MyKeyboardLayoutProvider: StandardKeyboardLayoutProvider {","    ","    override func keyboardLayout(for context: KeyboardContext) -> KeyboardLayout {","        let layout = super.keyboardLayout(for: context)","        var rows = layout.itemRows","        var row = layout.itemRows[0]","        let next = row[0]","        let size = KeyboardLayoutItemSize(width: .available, height: next.size.height)","        let tab = KeyboardLayoutItem(action: .tab, size: size, insets: next.insets)","        row.insert(tab, at: 0)","        rows[0] = row","        layout.itemRows = rows","        return layout","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use this implementation instead of the standard one, just replace the standard instance like this:"}]},{"type":"codeListing","syntax":"swift","code":["class MyKeyboardViewController: KeyboardInputViewController {","","    override func viewDidLoad() {","        keyboardLayoutProvider = MyKeyboardLayoutProvider()","        super.viewDidLoad()","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will make KeyboardKit use your custom implementation everywhere instead of the standard one."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/keyboardkit\/understanding-layout"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Layout","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This article describes the KeyboardKit keyboard layout engine and how to use it."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Understanding Layouts","role":"article","modules":[{"name":"KeyboardKit"}]},"hierarchy":{"paths":[["doc:\/\/KeyboardKit\/documentation\/KeyboardKit"]]},"seeAlsoSections":[{"title":"Articles","identifiers":["doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Getting-Started","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Actions","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Appearances","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Autocomplete","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Emojis","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Feedback","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Input-Sets","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Localization","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Previews","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Proxy-Extensions","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Text-Routing"],"generated":true}],"references":{"doc://KeyboardKit/documentation/KeyboardKit/iPhoneKeyboardLayoutProvider":{"role":"symbol","title":"iPhoneKeyboardLayoutProvider","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"iPhoneKeyboardLayoutProvider"}],"abstract":[{"type":"text","text":"This class provides a keyboard layout that correspond to an"},{"type":"text","text":" "},{"type":"text","text":"iPhone with either a home button or notch."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/iPhoneKeyboardLayoutProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"iPhoneKeyboardLayoutProvider"}],"url":"\/documentation\/keyboardkit\/iphonekeyboardlayoutprovider"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Emojis":{"role":"article","title":"Understanding Emojis","abstract":[{"type":"text","text":"This article describes the KeyboardKit emoji model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Emojis","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-emojis"},"doc://KeyboardKit/documentation/KeyboardKit":{"role":"collection","title":"KeyboardKit","abstract":[{"type":"text","text":"KeyboardKit helps you build custom keyboards with Swift and SwiftUI."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Text-Routing":{"role":"article","title":"Understanding Text Routing","abstract":[{"type":"text","text":"This article describes how KeyboardKit adds ways for you to route text to other text fields within the keyboard."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Text-Routing","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-text-routing"},"doc://KeyboardKit/documentation/KeyboardKit/StandardKeyboardLayoutProvider/iPhoneProvider":{"role":"symbol","title":"iPhoneProvider","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"iPhoneProvider"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"iPhoneKeyboardLayoutProvider","preciseIdentifier":"s:11KeyboardKit06iPhoneA14LayoutProviderC"}],"abstract":[{"type":"text","text":"The layout provider that is used for iPhone devices."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardLayoutProvider\/iPhoneProvider","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/standardkeyboardlayoutprovider\/iphoneprovider"},"doc://KeyboardKit/documentation/KeyboardKit/StandardKeyboardLayoutProvider":{"role":"symbol","title":"StandardKeyboardLayoutProvider","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"StandardKeyboardLayoutProvider"}],"abstract":[{"type":"text","text":"This keyboard layout provider bases its layout decisions on"},{"type":"text","text":" "},{"type":"text","text":"the type of device used. It will toggle between an "},{"type":"codeVoice","code":"iPhone"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"iPad"},{"type":"text","text":" specific layout provider."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardLayoutProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StandardKeyboardLayoutProvider"}],"url":"\/documentation\/keyboardkit\/standardkeyboardlayoutprovider"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Input-Sets":{"role":"article","title":"Understanding Input Sets","abstract":[{"type":"text","text":"This article describes the KeyboardKit input set model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Input-Sets","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-input-sets"},"https://github.com/KeyboardKit/KeyboardKitPro":{"title":"KeyboardKit Pro","titleInlineContent":[{"type":"text","text":"KeyboardKit Pro"}],"type":"link","identifier":"https:\/\/github.com\/KeyboardKit\/KeyboardKitPro","url":"https:\/\/github.com\/KeyboardKit\/KeyboardKitPro"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Actions":{"role":"article","title":"Understanding Actions","abstract":[{"type":"text","text":"This article describes the KeyboardKit action engine and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Actions","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-actions"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Previews":{"role":"article","title":"Understanding Previews","abstract":[{"type":"text","text":"This article describes how KeyboardKit makes it easy to preview keyboard-specific views."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Previews","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-previews"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController/keyboardLayoutProvider":{"role":"symbol","title":"keyboardLayoutProvider","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyboardLayoutProvider"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyboardLayoutProvider","preciseIdentifier":"s:11KeyboardKit0A14LayoutProviderP"}],"abstract":[{"type":"text","text":"This provider is used to get a complete keyboard layout"},{"type":"text","text":" "},{"type":"text","text":"for the current "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardContext"},{"type":"text","text":". This layout is the"},{"type":"text","text":" "},{"type":"text","text":"complete set of keys in a keyboard."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardLayoutProvider","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller\/keyboardlayoutprovider"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Localization":{"role":"article","title":"Understanding Localization","abstract":[{"type":"text","text":"This article describes the KeyboardKit localization model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Localization","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-localization"},"doc://KeyboardKit/documentation/KeyboardKit/iPadKeyboardLayoutProvider":{"role":"symbol","title":"iPadKeyboardLayoutProvider","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"iPadKeyboardLayoutProvider"}],"abstract":[{"type":"text","text":"This class provides a keyboard layout that correspond to an"},{"type":"text","text":" "},{"type":"text","text":"iPad with a home button."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/iPadKeyboardLayoutProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"iPadKeyboardLayoutProvider"}],"url":"\/documentation\/keyboardkit\/ipadkeyboardlayoutprovider"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Feedback":{"role":"article","title":"Understanding Feedback","abstract":[{"type":"text","text":"This article describes the KeyboardKit feedback engine and how to use it to get audio and haptic feedback."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Feedback","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-feedback"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Autocomplete":{"role":"article","title":"Understanding Autocomplete","abstract":[{"type":"text","text":"This article describes the KeyboardKit autocomplete engine and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Autocomplete","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-autocomplete"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardLayoutProvider":{"role":"symbol","title":"KeyboardLayoutProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardLayoutProvider"}],"abstract":[{"type":"text","text":"This protocol can be implemented by any classes that can be"},{"type":"text","text":" "},{"type":"text","text":"used to generate a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardLayout"},{"type":"text","text":" for a certain context."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardLayoutProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardLayoutProvider"}],"url":"\/documentation\/keyboardkit\/keyboardlayoutprovider"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardLayout":{"role":"symbol","title":"KeyboardLayout","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardLayout"}],"abstract":[{"type":"text","text":"A keyboard layout defines all available keyboard actions on"},{"type":"text","text":" "},{"type":"text","text":"a keyboard, as well as their size."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardLayout","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardLayout"}],"url":"\/documentation\/keyboardkit\/keyboardlayout"},"doc://KeyboardKit/documentation/KeyboardKit/Getting-Started":{"role":"article","title":"Getting Started","abstract":[{"type":"text","text":"This article discusses how get started using KeyboardKit in your app."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Getting-Started","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/getting-started"},"doc://KeyboardKit/documentation/KeyboardKit/InputSetProvider":{"role":"symbol","title":"InputSetProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InputSetProvider"}],"abstract":[{"type":"text","text":"This protocol can be implemented by any classes that can be"},{"type":"text","text":" "},{"type":"text","text":"used to provide "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/InputSet"},{"type":"text","text":" values for keyboard layouts."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/InputSetProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InputSetProvider"}],"url":"\/documentation\/keyboardkit\/inputsetprovider"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Appearances":{"role":"article","title":"Understanding Appearances","abstract":[{"type":"text","text":"This article describes the KeyboardKit appearance engine and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Appearances","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-appearances"},"doc://KeyboardKit/documentation/KeyboardKit/SystemKeyboard":{"role":"symbol","title":"SystemKeyboard","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SystemKeyboard"}],"abstract":[{"type":"text","text":"This view mimics native iOS system keyboards, like standard"},{"type":"text","text":" "},{"type":"text","text":"alphabetic, numeric and symbolic system keyboards."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemKeyboard","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SystemKeyboard"}],"url":"\/documentation\/keyboardkit\/systemkeyboard"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController/keyboardContext":{"role":"symbol","title":"keyboardContext","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyboardContext"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyboardContext","preciseIdentifier":"s:11KeyboardKit0A7ContextC"}],"abstract":[{"type":"text","text":"The default, observable keyboard context."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardContext","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller\/keyboardcontext"},"doc://KeyboardKit/documentation/KeyboardKit/StandardKeyboardLayoutProvider/keyboardLayout(for:)":{"role":"symbol","title":"keyboardLayout(for:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyboardLayout"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyboardContext","preciseIdentifier":"s:11KeyboardKit0A7ContextC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"KeyboardLayout","preciseIdentifier":"s:11KeyboardKit0A6LayoutC"}],"abstract":[{"type":"text","text":"Get a keyboard layout for a certain keyboard "},{"type":"codeVoice","code":"context"},{"type":"text","text":"."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardLayoutProvider\/keyboardLayout(for:)","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/standardkeyboardlayoutprovider\/keyboardlayout(for:)"},"doc://KeyboardKit/documentation/KeyboardKit/InputSet":{"role":"symbol","title":"InputSet","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"InputSet"}],"abstract":[{"type":"text","text":"An input set defines the input keys on a keyboard. The keys"},{"type":"text","text":" "},{"type":"text","text":"can then be used to create a keyboard layout, which defines"},{"type":"text","text":" "},{"type":"text","text":"the full set of keys, including the surrounding system keys."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/InputSet","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InputSet"}],"url":"\/documentation\/keyboardkit\/inputset"},"doc://KeyboardKit/documentation/KeyboardKit/StandardKeyboardLayoutProvider/iPadProvider":{"role":"symbol","title":"iPadProvider","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"iPadProvider"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"iPadKeyboardLayoutProvider","preciseIdentifier":"s:11KeyboardKit04iPadA14LayoutProviderC"}],"abstract":[{"type":"text","text":"The layout provider that is used for iPad devices."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardLayoutProvider\/iPadProvider","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/standardkeyboardlayoutprovider\/ipadprovider"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Proxy-Extensions":{"role":"article","title":"Understanding Proxy Extensions","abstract":[{"type":"text","text":"This article describes how KeyboardKit extends "},{"type":"codeVoice","code":"UITextDocumentProxy"},{"type":"text","text":" with a lot of additional functionality."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Proxy-Extensions","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-proxy-extensions"}}}